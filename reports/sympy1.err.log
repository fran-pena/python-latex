Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# REQUISITOS:
# python -m pip install sympy
# python -m pip install antlr4-python3-runtime==4.11
# RESULTADO:
# >> python ejemplo_sympy.py
#    ExpresiÃ³n SymPy: (sqrt(a) + 1)/b
#    derivada âˆ‚/âˆ‚a: 1/(2*sqrt(a)*b)
#    Valor numÃ©rico: 1.618033988749895

from sympy import symbols
from sympy.parsing.latex import parse_latex

# definir sÃ­mbolos que luego usaremos
a, b = symbols('a b')

# cadena LaTeX; nota el prefijo r"" para que las barras no se interpreten como escapes
latex_str = r"\frac{1 + \sqrt{a}}{b}"

# parseamos
expr = parse_latex(latex_str)
print("ExpresiÃ³n SymPy:", expr)
# -> deberÃ­a imprimir algo como (sqrt(a) + 1)/b

# Ahora podemos hacer operaciones simbÃ³licas:
# por ejemplo, derivar respecto a a
dexpr_da = expr.diff(a)
print("derivada âˆ‚/âˆ‚a:", dexpr_da)

# evaluar para valores concretos, digamos a = 5, b = 2
val = expr.subs({a: 5, b: 2})
print("Valor numÃ©rico:", float(val))

------------------

----- stderr -----
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/sympy/parsing/latex/_parse_latex_antlr.py:23: UserWarning: antlr4.error.ErrorListener module is not installed
  ErrorListener = import_module('antlr4.error.ErrorListener',
------------------

[31m---------------------------------------------------------------------------[39m
[31mImportError[39m                               Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 20[39m
[32m     17[39m latex_str = [33mr[39m[33m"[39m[33m\[39m[33mfrac[39m[33m{[39m[33m1 + [39m[33m\[39m[33msqrt[39m[38;5;132;01m{a}[39;00m[33m}[39m[38;5;132;01m{b}[39;00m[33m"[39m
[32m     19[39m [38;5;66;03m# parseamos[39;00m
[32m---> [39m[32m20[39m expr = [43mparse_latex[49m[43m([49m[43mlatex_str[49m[43m)[49m
[32m     21[39m [38;5;28mprint[39m([33m"[39m[33mExpresiÃ³n SymPy:[39m[33m"[39m, expr)
[32m     22[39m [38;5;66;03m# -> deberÃ­a imprimir algo como (sqrt(a) + 1)/b[39;00m
[32m     23[39m 
[32m     24[39m [38;5;66;03m# Ahora podemos hacer operaciones simbÃ³licas:[39;00m
[32m     25[39m [38;5;66;03m# por ejemplo, derivar respecto a a[39;00m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/sympy/parsing/latex/__init__.py:199[39m, in [36mparse_latex[39m[34m(s, strict, backend)[39m
[32m    194[39m     _latex = import_module(
[32m    195[39m         [33m'[39m[33msympy.parsing.latex._parse_latex_antlr[39m[33m'[39m,
[32m    196[39m         import_kwargs={[33m'[39m[33mfromlist[39m[33m'[39m: [[33m'[39m[33mX[39m[33m'[39m]})
[32m    198[39m     [38;5;28;01mif[39;00m _latex [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m199[39m         [38;5;28;01mreturn[39;00m [43m_latex[49m[43m.[49m[43mparse_latex[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43mstrict[49m[43m)[49m
[32m    200[39m [38;5;28;01melif[39;00m backend == [33m"[39m[33mlark[39m[33m"[39m:
[32m    201[39m     [38;5;28;01mreturn[39;00m parse_latex_lark(s)

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/sympy/parsing/latex/_parse_latex_antlr.py:66[39m, in [36mparse_latex[39m[34m(sympy, strict)[39m
[32m     62[39m antlr4 = import_module([33m'[39m[33mantlr4[39m[33m'[39m)
[32m     64[39m [38;5;28;01mif[39;00m [38;5;28;01mNone[39;00m [38;5;129;01min[39;00m [antlr4, MathErrorListener] [38;5;129;01mor[39;00m \
[32m     65[39m         [38;5;129;01mnot[39;00m version([33m'[39m[33mantlr4-python3-runtime[39m[33m'[39m).startswith([33m'[39m[33m4.11[39m[33m'[39m):
[32m---> [39m[32m66[39m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m([33m"[39m[33mLaTeX parsing requires the antlr4 Python package,[39m[33m"[39m
[32m     67[39m                       [33m"[39m[33m provided by pip (antlr4-python3-runtime) or[39m[33m"[39m
[32m     68[39m                       [33m"[39m[33m conda (antlr-python-runtime), version 4.11[39m[33m"[39m)
[32m     70[39m sympy = sympy.strip()
[32m     71[39m matherror = MathErrorListener(sympy)

[31mImportError[39m: LaTeX parsing requires the antlr4 Python package, provided by pip (antlr4-python3-runtime) or conda (antlr-python-runtime), version 4.11

